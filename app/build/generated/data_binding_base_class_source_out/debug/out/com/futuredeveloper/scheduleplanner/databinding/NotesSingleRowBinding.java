// Generated by view binder compiler. Do not edit!
package com.futuredeveloper.scheduleplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.futuredeveloper.scheduleplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NotesSingleRowBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView count;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageView delete3;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView edit3;

  @NonNull
  public final View horizontalRow;

  @NonNull
  public final RelativeLayout taskView;

  @NonNull
  public final View verticalRow;

  private NotesSingleRowBinding(@NonNull CardView rootView, @NonNull TextView count,
      @NonNull TextView date, @NonNull ImageView delete3, @NonNull TextView description,
      @NonNull ImageView edit3, @NonNull View horizontalRow, @NonNull RelativeLayout taskView,
      @NonNull View verticalRow) {
    this.rootView = rootView;
    this.count = count;
    this.date = date;
    this.delete3 = delete3;
    this.description = description;
    this.edit3 = edit3;
    this.horizontalRow = horizontalRow;
    this.taskView = taskView;
    this.verticalRow = verticalRow;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static NotesSingleRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NotesSingleRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.notes_single_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NotesSingleRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.count;
      TextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.delete3;
      ImageView delete3 = ViewBindings.findChildViewById(rootView, id);
      if (delete3 == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.edit3;
      ImageView edit3 = ViewBindings.findChildViewById(rootView, id);
      if (edit3 == null) {
        break missingId;
      }

      id = R.id.horizontal_row;
      View horizontalRow = ViewBindings.findChildViewById(rootView, id);
      if (horizontalRow == null) {
        break missingId;
      }

      id = R.id.taskView;
      RelativeLayout taskView = ViewBindings.findChildViewById(rootView, id);
      if (taskView == null) {
        break missingId;
      }

      id = R.id.vertical_row;
      View verticalRow = ViewBindings.findChildViewById(rootView, id);
      if (verticalRow == null) {
        break missingId;
      }

      return new NotesSingleRowBinding((CardView) rootView, count, date, delete3, description,
          edit3, horizontalRow, taskView, verticalRow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
