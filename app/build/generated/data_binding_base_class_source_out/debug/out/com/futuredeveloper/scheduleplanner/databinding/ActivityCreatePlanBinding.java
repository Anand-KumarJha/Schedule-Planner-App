// Generated by view binder compiler. Do not edit!
package com.futuredeveloper.scheduleplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.futuredeveloper.scheduleplanner.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreatePlanBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final FloatingActionButton createIcon;

  @NonNull
  public final Button datePickerButton;

  @NonNull
  public final NestedScrollView nestedScrollView1;

  @NonNull
  public final RelativeLayout noTask;

  @NonNull
  public final ImageView notes;

  @NonNull
  public final RecyclerView recyclerHome;

  @NonNull
  public final FloatingActionButton saveIcon;

  @NonNull
  public final EditText title;

  @NonNull
  public final Toolbar toolbar1;

  private ActivityCreatePlanBinding(@NonNull RelativeLayout rootView,
      @NonNull CoordinatorLayout coordinator, @NonNull FloatingActionButton createIcon,
      @NonNull Button datePickerButton, @NonNull NestedScrollView nestedScrollView1,
      @NonNull RelativeLayout noTask, @NonNull ImageView notes, @NonNull RecyclerView recyclerHome,
      @NonNull FloatingActionButton saveIcon, @NonNull EditText title, @NonNull Toolbar toolbar1) {
    this.rootView = rootView;
    this.coordinator = coordinator;
    this.createIcon = createIcon;
    this.datePickerButton = datePickerButton;
    this.nestedScrollView1 = nestedScrollView1;
    this.noTask = noTask;
    this.notes = notes;
    this.recyclerHome = recyclerHome;
    this.saveIcon = saveIcon;
    this.title = title;
    this.toolbar1 = toolbar1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreatePlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreatePlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_plan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreatePlanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.coordinator;
      CoordinatorLayout coordinator = ViewBindings.findChildViewById(rootView, id);
      if (coordinator == null) {
        break missingId;
      }

      id = R.id.create_icon;
      FloatingActionButton createIcon = ViewBindings.findChildViewById(rootView, id);
      if (createIcon == null) {
        break missingId;
      }

      id = R.id.datePickerButton;
      Button datePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (datePickerButton == null) {
        break missingId;
      }

      id = R.id.nestedScrollView1;
      NestedScrollView nestedScrollView1 = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView1 == null) {
        break missingId;
      }

      id = R.id.noTask;
      RelativeLayout noTask = ViewBindings.findChildViewById(rootView, id);
      if (noTask == null) {
        break missingId;
      }

      id = R.id.notes;
      ImageView notes = ViewBindings.findChildViewById(rootView, id);
      if (notes == null) {
        break missingId;
      }

      id = R.id.recyclerHome;
      RecyclerView recyclerHome = ViewBindings.findChildViewById(rootView, id);
      if (recyclerHome == null) {
        break missingId;
      }

      id = R.id.save_icon;
      FloatingActionButton saveIcon = ViewBindings.findChildViewById(rootView, id);
      if (saveIcon == null) {
        break missingId;
      }

      id = R.id.title;
      EditText title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar1;
      Toolbar toolbar1 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar1 == null) {
        break missingId;
      }

      return new ActivityCreatePlanBinding((RelativeLayout) rootView, coordinator, createIcon,
          datePickerButton, nestedScrollView1, noTask, notes, recyclerHome, saveIcon, title,
          toolbar1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
